// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PolicyAPI.Models;

#nullable disable

namespace PolicyAPI.Migrations
{
    [DbContext(typeof(PolicyContext))]
    partial class PolicyContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("PolicyAPI.Models.ConsumerPolicy", b =>
                {
                    b.Property<int>("PolicyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PolicyId"), 1L, 1);

                    b.Property<int>("PolicyMasterId")
                        .HasColumnType("int");

                    b.Property<string>("PolicyStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PropertyId")
                        .HasColumnType("int");

                    b.Property<int>("QuoteValue")
                        .HasColumnType("int");

                    b.HasKey("PolicyId");

                    b.HasIndex("PolicyMasterId");

                    b.ToTable("consumerPolicies");
                });

            modelBuilder.Entity("PolicyAPI.Models.PolicyMaster", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<long>("AssuredSum")
                        .HasColumnType("bigint");

                    b.Property<string>("BaseLocation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BusinessValue")
                        .HasColumnType("int");

                    b.Property<string>("ConsumerType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlolicyType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropertyType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PropertyValue")
                        .HasColumnType("int");

                    b.Property<int>("Tenure")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("policies");
                });

            modelBuilder.Entity("PolicyAPI.Models.ConsumerPolicy", b =>
                {
                    b.HasOne("PolicyAPI.Models.PolicyMaster", null)
                        .WithMany("consumerpolicies")
                        .HasForeignKey("PolicyMasterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PolicyAPI.Models.PolicyMaster", b =>
                {
                    b.Navigation("consumerpolicies");
                });
#pragma warning restore 612, 618
        }
    }
}
